/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
	// Apply the java-library plugin to add support for Java Library
	id 'java-library'
	id 'maven-publish'
	id 'signing'
	id 'io.codearte.nexus-staging' version '0.30.0'
	id "com.diffplug.spotless" version "5.15.0"
}

group = 'com.meilisearch.sdk'
archivesBaseName = 'meilisearch-java'
version = '0.4.1'

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
	mavenCentral() // Required for Lombok dependency
	jcenter()
}

configurations {
	testCompile.extendsFrom compileOnly
}

dependencies {
	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation 'org.json:json:20210307'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	compileOnly group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.1'
	compileOnly 'com.squareup.okhttp3:okhttp:4.9.1'

	// Use JUnit test framework
	testImplementation(platform('org.junit:junit-bom:5.8.1'))
	testImplementation('org.junit.jupiter:junit-jupiter:5.8.1')
	// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testImplementation 'org.mockito:mockito-core:3.12.4'
	testImplementation 'org.hamcrest:hamcrest:2.2'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
	compileOnly group: 'jakarta.json.bind', name: 'jakarta.json.bind-api', version: '2.0.0'
	testImplementation group: 'org.eclipse', name: 'yasson', version: '2.0.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
}

task buildJar(type: Jar) {
	archiveBaseName = 'meilisearch-java'
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	{
		exclude 'META-INF/*.SF'
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
	}
	with jar
}

test {
	useJUnitPlatform {
		excludeTags('integration')
	}
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

task integrationTest(type: Test) {
	useJUnitPlatform {
		includeTags('integration')
	}
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'meilisearch-java'
			from components.java
			pom {
				name = 'com.meilisearch.sdk:meilisearch-java'
				packaging = 'jar'
				artifactId = 'meilisearch-java'
				description = 'MeiliSearch is a powerful, fast, open-source, easy to use and deploy search engine.'
				url = 'https://github.com/meilisearch/meilisearch-java'
				scm {
					connection = 'scm:git:git://github.com/meilisearch/meilisearch-java.git'
					developerConnection = 'scm:git:ssh://github.com:meilisearch/meilisearch-java.git'
					url = 'http://github.com/meilisearch/meilisearch-java'
				}
				licenses {
					license {
						name = 'MIT License'
						url = 'http://www.opensource.org/licenses/mit-license.php'
					}
				}
				developers {
					developer {
						id = 'eskombro'
						name = 'Samuel Jimenez'
						email = 'samuel@meilisearch.com'
					}
				}
			}
		}
	}
	repositories {
		maven {
			url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			credentials {
				username System.getenv('OSSRH_USERNAME')
				password System.getenv('OSSRH_PASSWORD')
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}

javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}

nexusStaging {
	packageGroup = "com.meilisearch"
	serverUrl = "https://oss.sonatype.org/service/local/"
	username System.getenv('OSSRH_USERNAME')
	password System.getenv('OSSRH_PASSWORD')
}
spotless {

	java {
		// don't need to set target, it is inferred from java

		// apply a specific flavor of google-java-format
		googleJavaFormat('1.7').aosp()
	}
}
