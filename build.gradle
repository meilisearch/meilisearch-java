/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
	// Apply the java-library plugin to add support for Java Library
	id 'java-library'
}

group = 'com.meilisearch.sdk'
archivesBaseName = 'meilisearch-java'
version = '0.1.1'

apply plugin: 'maven'
apply plugin: 'signing'

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
	mavenCentral() // Required for Lombok dependency
	jcenter()
}

configurations {
	testCompile.extendsFrom compileOnly
}

configurations {
	testCompile.extendsFrom compileOnly
}

dependencies {
	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:30.0-jre'
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.json:json:20201115'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	compileOnly group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.0.3'
	compileOnly 'com.squareup.okhttp3:okhttp:4.9.0'

	// Use JUnit test framework
	testImplementation(platform('org.junit:junit-bom:5.7.0'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testImplementation 'org.mockito:mockito-core:3.6.28'
	testImplementation 'org.hamcrest:hamcrest:2.2'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0'
	compileOnly group: 'jakarta.json.bind', name: 'jakarta.json.bind-api', version: '1.0.2'
	testImplementation group: 'org.eclipse', name: 'yasson', version: '1.0.8'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

task buildJar(type: Jar) {
	baseName = 'meilisearch-java'
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
		{
			exclude 'META-INF/*.SF'
			exclude 'META-INF/*.DSA'
			exclude 'META-INF/*.RSA'
		}
	with jar
}

test {
	useJUnitPlatform {
		excludeTags('integration')
	}
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

task integrationTest(type: Test) {
	useJUnitPlatform {
		includeTags('integration')
	}
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
}

task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
}

artifacts {
		archives javadocJar, sourcesJar
}



signing {
	if (project.hasProperty('releaseSDK')){
		useGpgCmd()
		sign configurations.archives
	}
}

uploadArchives {

	def ossrhUsername = findProperty('ossrhUsername')
	def ossrhPassword = findProperty('ossrhPassword')

	project.logger.lifecycle('Trying to upload files to Maven repository...')

	repositories {
		mavenDeployer {
			beforeDeployment {
				MavenDeployment deployment -> signing.signPom(deployment)
			}

			repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'com.meilisearch.sdk:meilisearch-java'
				packaging 'jar'
				artifactId 'meilisearch-java'
				description 'MeiliSearch is a powerful, fast, open-source, easy to use and deploy search engine.'
				url 'https://github.com/meilisearch/meilisearch-java'

				scm {
					connection 'scm:git:git://github.com/meilisearch/meilisearch-java.git'
					developerConnection 'scm:git:ssh://github.com:meilisearch/meilisearch-java.git'
					url 'http://github.com/meilisearch/meilisearch-java'
				}

				licenses {
					license {
					name 'MIT License'
					url 'http://www.opensource.org/licenses/mit-license.php'
					}
				}

				developers {
					developer {
					id 'eskombro'
					name 'Samuel Jimenez'
					email 'samuel@meilisearch.com'
					}
				}
			}
		}
	}
}
